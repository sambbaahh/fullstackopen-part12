Script started on 2024-04-25 17:29:26+03:00 [TERM="xterm-256color" TTY="/dev/pts/3" COLUMNS="76" LINES="9"]
To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

[?2004h]0;samik@samik: /mnt/c/Users/samik/Documents/ohjelmointi/fullstackopen-part12/todo-app/todo-backend[01;32msamik@samik[00m:[01;34m/mnt/c/Users/samik/Documents/ohjelmointi/fullstackopen-part12/todo-app/todo-backend[00m$ exitdocker compose -f  docker-compose.dev.yml up -d[1P
[?2004lsamik
[33mWARN[0m[0000] /mnt/c/Users/samik/Documents/ohjelmointi/fullstackopen-part12/todo-app/todo-backend/docker-compose.dev.yml: `version` is obsolete 
[33mWARN[0m[0000] Found orphan containers ([todo-backend-app-1]) for this project. If you removed or renamed this service in your compose file, you can run this command with the --remove-orphans flag to clean it up. 
[1A[1B[0G[?25l[+] Running 1/0
 [32mâœ”[0m Container todo-backend-mongo-1  samikng[0m                             [34m0.0s [0msamik
[?25h[?2004h]0;samik@samik: /mnt/c/Users/samik/Documents/ohjelmointi/fullstackopen-part12/todo-app/todo-backend[01;32msamik@samik[00m:[01;34m/mnt/c/Users/samik/Documents/ohjelmointi/fullstackopen-part12/todo-app/todo-backend[00m$ [7mdocker exec -it wonderful_ramanujan bash[27m
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cdocker exec -it wonderful_ramanujan bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash, bash[1P bashm basho bashn bashg basho bash- bash1 bash[C
[?2004l
Error response from daemon: No such container: mongo-1
[1m
What's next?samiksamik
[0m  Try Docker Debug for seamless, persistent debugging tools in any container or image â†’ [36mdocker debug mongo-1[0m
  Learn more at https://docs.docker.com/go/debug-cli/
[?2004h]0;samik@samik: /mnt/c/Users/samik/Documents/ohjelmointi/fullstackopen-part12/todo-app/todo-backend[01;32msamik@samik[00m:[01;34m/mnt/c/Users/samik/Documents/ohjelmointi/fullstackopen-part12/todo-app/todo-backend[00m$ docker exec -it mongo-1 bash[1@t[1@o[1@d[1@o[1@-[1@b[1@a[1@c[1@k[1@e[1@n[1@d[1@:
[?2004l
Error response from daemon: No such container: todo-backend:mongo-1
[1msamiksamik
What's next?
[0m  Try Docker Debug for seamless, persistent debugging tools in any container or image â†’ [36mdocker debug todo-backend:mongo-1[0m
  Learn more at https://docs.docker.com/go/debug-cli/
[?2004h]0;samik@samik: /mnt/c/Users/samik/Documents/ohjelmointi/fullstackopen-part12/todo-app/todo-backend[01;32msamik@samik[00m:[01;34m/mnt/c/Users/samik/Documents/ohjelmointi/fullstackopen-part12/todo-app/todo-backend[00m$ docker exec -it todo-backend:mongo-1 bash[C[C[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash[1P bash7 bashe bash
[?2004l
[?2004hroot@7e78f720ea6b:/# [7mmongosh[27mmongosh[7m-u root -p example[27m-u root -p example[1@ 
[?2004l
]0;mongosh mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000Current Mongosh Log ID:	662a69613b4324eedfc934dc
Connecting to:		[1m[32mmongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.4[0m
Using MongoDB:		7.0.8
[1m[33mUsing Mongosh[0m:		2.2.4

For mongosh info see: https://docs.mongodb.com/mongodb-shell/


To help improve our products, anonymous usage data is collected and sent to MongoDB periodically (https://www.mongodb.com/legal/privacy-policy).
You can opt-out by running the disableTelemetry() command.

[1G[0J [1G[1m[33m------[0m
   [1m[33mThe server generated these startup warnings when booting[0m
   2024-04-25T14:29:10.211+00:00: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2024-04-25T14:29:11.494+00:00: /sys/kernel/mm/transparent_hugepage/enabled is 'always'. We suggest setting it to 'never' in this binary version
   2024-04-25T14:29:11.494+00:00: vm.max_map_count is too low
[1m[33m------[0m

[1G[0Jtest> [7Gshow dbs

[1madmin[0m         100.00 KiB
[1mconfig[0m        108.00 KiB
[1mlocal[0m          72.00 KiB
[1mthe_database[0m   56.00 KiB
[1G[0Jtest> [7Guse the_database

switched to db the_database
[1G[0Jthe_database> [15Gshow collections

[1mtodos[0m
[1G[0Jthe_database> [15Gdb.todos.find({][1G[0Jthe_database> db.todos.find({[30G})

[
  {
    _id: ObjectId([32m'662a5b6539af7a96dbc934dd'[39m),
    text: [32m'Write code!kissa!a'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'662a5b6539af7a96dbc934de'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15Gdb.pro[1G[0Jthe_database> db.pr[20G[1G[0Jthe_database> db.p[19G[1G[0Jthe_database> db.[18Gtodos.insertOne()[1D[1G[0Jthe_database> db.todos.insertOne[44m([49m)[34G[1G[0Jthe_database> db.todos.insertOne[44m([49m{)[35G[1G[0Jthe_database> db.todos.insertOne[44m([49m{})[36G[1D[1G[0Jthe_database> db.todos.insertOne([44m{[49m})[35G[1G[0Jthe_database> db.todos.insertOne([44m{[49mt})[36G[1G[0Jthe_database> db.todos.insertOne([44m{[49mte})[37G[1G[0Jthe_database> db.todos.insertOne([44m{[49mtex})[38G[1G[0Jthe_database> db.todos.insertOne([44m{[49mtext})[39G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m:})[40G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: })[41G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"})[39m[42G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m""[39m})[43G[1D[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49m"[39m})[42G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mL"[39m})[43G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLe"[39m})[44G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLea"[39m})[45G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLear"[39m})[46G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn"[39m})[47G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn "[39m})[48G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn m"[39m})[49G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn mo"[39m})[50G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn mor"[39m})[51G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more"[39m})[52G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more "[39m})[53G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more a"[39m})[54G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more ab"[39m})[55G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more abo"[39m})[56G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more abou"[39m})[57G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more about"[39m})[58G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more about "[39m})[59G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more about c"[39m})[60G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more about co"[39m})[61G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more about con"[39m})[62G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more about cont"[39m})[63G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more about conta"[39m})[64G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more about contai"[39m})[65G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more about contain"[39m})[66G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more about containe"[39m})[67G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more about container"[39m})[68G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [44m[32m"[49mLearn more about containers"[39m})[69G[1C[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m})[70G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m,})[71G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m, })[72G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m, d})[73G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m, [36mdo[39m})[74G[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m, don}) [75G[1A[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m, done})[76G[1A[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m, [33mdone[39m:})[1G[1A[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m, [33mdone[39m: })[2G[1A[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m, [33mdone[39m: f})[3G[1A[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m, [33mdone[39m: fa})[4G[1A[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m, [33mdone[39m: fal})[5G[1A[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m, [33mdone[39m: fals})[6G[1A[1G[0Jthe_database> db.todos.insertOne([44m{[49m[33mtext[39m: [32m"Learn more about containers"[39m, [33mdone[39m: [33mfalse[39m})[7G[2C[1A[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Learn more about containers"[39m, [33mdone[39m: [33mfalse[39m})[9G

{
  acknowledged: [33mtrue[39m,
  insertedId: ObjectId([32m'662a69e73b4324eedfc934dd'[39m)
}
[1G[0Jthe_database> [15G[1G[0Jthe_database> db.todos.insertOne({[33mtext[39m: [32m"Learn more about containers"[39m, [33mdone[39m: [33mfalse[39m})[9G[1A[1G[0Jthe_database> db.todos.find({})[32G

[
  {
    _id: ObjectId([32m'662a5b6539af7a96dbc934dd'[39m),
    text: [32m'Write code!kissa!a'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'662a5b6539af7a96dbc934de'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'662a69e73b4324samik'[39m),samik
    text: [32m'Learn more about containers'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15Gexit

[?2004hroot@7e78f720ea6b:/# exit
[?2004l
exit
[1m
What's next?
[0m  Try Docker Debug for seamless, persistent debugging tools in any container or image â†’ [36mdocker debug 7e[0m
  Learn more at https://docs.docker.com/go/debug-cli/
[?2004h]0;samik@samik: /mnt/c/Users/samik/Documents/ohjelmointi/fullstackopen-part12/todo-app/todo-backend[01;32msamik@samik[00m:[01;34m/mnt/c/Users/samik/Documents/ohjelmointi/fullstackopen-part12/todo-app/todo-backend[00m$ exit
[?2004l
exit

Script done on 2024-04-25 17:34:49+03:00 [COMMAND_EXIT_CODE="0"]
